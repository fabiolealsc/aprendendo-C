<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>